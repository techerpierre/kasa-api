generator client {
  provider = "go run github.com/steebchen/prisma-client-go"
  output = env("GENERATOR_OUTPUT")
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  firstname String
  lastname String
  picture String?
  cover String?
  authorizationsId String
  authorizations Authorizations @relation(fields: [authorizationsId], references: [id])
  accommodations Accommodation[]
  bookings Booking[]
  ratings Rating[]
  comments Comment[]
}

model Authorizations {
  id String @id
  createAuthorization Boolean @default(false)
  updateAuthorization Boolean @default(false)
  deleteAuthorization Boolean @default(false)
  createUser Boolean @default(false)
  updateUser Boolean @default(false)
  deleteUser Boolean @default(false)
  createAccommodation Boolean @default(false)
  updateAccommodation Boolean @default(false)
  deleteAccommodation Boolean @default(false)
  createBooking Boolean @default(false)
  updateBooking Boolean @default(false)
  deleteBooking Boolean @default(false)
  createRating Boolean @default(false)
  updateRating Boolean @default(false)
  deleteRating Boolean @default(false)
  createComment Boolean @default(false)
  updateComment Boolean @default(false)
  deleteComment Boolean @default(false)
  users User[]
}

model Accommodation {
  id String @id @default(uuid())
  title String
  description String
  cover String
  pictures String[]
  adress String
  additionalAdress String?
  zip String
  city String
  country String
  active Boolean
  equipments String[]
  tags String[]
  userId String
  user User @relation(fields: [userId], references: [id])
  ratings Rating[]
  comments Comment[]
  bookings Booking[]
}

model Booking {
  id String @id @default(uuid())
  start DateTime
  end DateTime
  accommodationId String
  accommodation Accommodation @relation(fields: [accommodationId], references: [id])
  clientId String
  client User @relation(fields: [clientId], references: [id])
}

model Rating {
  id String @id @default(uuid())
  value Int
  accommodationId String
  accommodation Accommodation @relation(fields: [accommodationId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Comment {
  id String @id @default(uuid())
  content String
  accommodationId String
  accommodation Accommodation @relation(fields: [accommodationId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
}